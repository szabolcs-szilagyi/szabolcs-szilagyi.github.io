<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on this&#39;n&#39;that</title>
		<link>https://szab.it/posts/</link>
		<description>Recent content in Posts on this&#39;n&#39;that</description>
		<generator>Hugo 0.80.0 -- gohugo.io</generator>
		<language>en-us</language>
		<lastBuildDate>Mon, 22 Feb 2021 18:39:00 +0100</lastBuildDate>
		<atom:link href="https://szab.it/posts/index.xml" rel="self" type="application/rss+xml" />
		<item>
			<title>Time travel and privacy</title>
			<link>https://szab.it/posts/time-travel-and-privacy/</link>
			<pubDate>Mon, 22 Feb 2021 18:39:00 +0100</pubDate>
			<guid isPermaLink="true">https://szab.it/posts/time-travel-and-privacy/</guid>
			<description>&lt;p&gt;In December of 2020 I read some articles that made me want to go back in time
and use tools that I considered to be old. One of these articles was about the
productivity score by Microsoft&amp;rsquo;s O365, another was about how our phones betray
our trust (no surprise there).&lt;/p&gt;
&lt;p&gt;The content behind the following three links that made me think:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theguardian.com/technology/2020/nov/26/microsoft-productivity-score-feature-criticised-workplace-surveillance&#34;&gt;https://www.theguardian.com/technology/2020/nov/26/microsoft-productivity-score-feature-criticised-workplace-surveillance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/WolfieChristl/status/1331221942850949121&#34;&gt;https://twitter.com/WolfieChristl/status/1331221942850949121&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nrkbeta.no/2020/12/03/my-phone-was-spying-on-me-so-i-tracked-down-the-surveillants&#34;&gt;https://nrkbeta.no/2020/12/03/my-phone-was-spying-on-me-so-i-tracked-down-the-surveillants&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mail-and-calendar&#34;&gt;Mail and Calendar&lt;/h2&gt;
&lt;p&gt;After reading the article about O365 and that GSuite also has something similar
to that, I decided to go back to some kind of e-mail and calendar application
like Thunderbird or Evolution.&lt;/p&gt;
&lt;p&gt;Yes I did use O365 via the browser before, it worked actually quite well didn&amp;rsquo;t
miss notifications and it overall provided a good interface. But using the
browser it also means that they can track:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;where is my mouse on the screen,&lt;/li&gt;
&lt;li&gt;if the tab is actually active on my screen&lt;/li&gt;
&lt;li&gt;what is on my screen&lt;/li&gt;
&lt;li&gt;typing and deleting and typing&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So really waaaay too much information that I would feel comfortable to share.&lt;/p&gt;
&lt;p&gt;Must say it here: I&amp;rsquo;m not working for a company that collects such information
or would do actions based on such information. If the company would change and
go in this direction then I would have the choice to change my employer. Still I
would rather avoid providing even the possibility for it.&lt;/p&gt;
&lt;p&gt;Looked through possible e-mail clients for GNU/Linux, there were two things that
are a must have for me:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;no electron apps - don&amp;rsquo;t want to run a full browser with nodejs.. just don&amp;rsquo;t&lt;/li&gt;
&lt;li&gt;to be able to integrate with a calendar app.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Checked BlueMail briefly, but fall short on &lt;em&gt;a)&lt;/em&gt; being an electron app and &lt;em&gt;b)&lt;/em&gt; not
really maintained.&lt;/p&gt;
&lt;p&gt;Looked at Thunderbird, it is still an okay with Lightning it can also satisfy
the calendar and it is still the default e-mail client in Ubuntu. While I don&amp;rsquo;t
use Ubuntu this will still keep maintainers motivated. However Thunderbird just
didn&amp;rsquo;t feel right to me.&lt;/p&gt;
&lt;p&gt;Lastly I tried Evolution. After installing and setting it up, realized that I
used to use this client back when I started programming in 2010. Suddenly I&amp;rsquo;m
back in 2010, just have more grey hair than I used to.&lt;/p&gt;
&lt;p&gt;With evolution it was a huge surprise to me that it works with O365 out of the
box, syncs calendar, contacts and even the todo items (if I would use them..
org-mode FTW!).&lt;/p&gt;
&lt;p&gt;NOTE: MS did admit this wasn&amp;rsquo;t a good way and they are going to remove some low
level reporting. See their &lt;a href=&#34;https://www.microsoft.com/en-us/microsoft-365/blog/2020/12/01/our-commitment-to-privacy-in-microsoft-productivity-score/&#34;&gt;blog post&lt;/a&gt; about it.&lt;/p&gt;
&lt;h2 id=&#34;chat-applications&#34;&gt;Chat applications&lt;/h2&gt;
&lt;p&gt;Okay this is bit of different topic than MS and phones tracking all of our
moves, but still related to the back in time theme.&lt;/p&gt;
&lt;p&gt;By moving my e-mail and calendar to an app I managed to close two pinned tabs
from my browser and also managed to avoid using container tabs to be able to
login to my son&amp;rsquo;s and daughter&amp;rsquo;s O365 account (they are in lower grades of
primary school, so yes I do get to manage their accounts for when we&amp;rsquo;re in
remote tuition mode). With this closing of tabs I noticed that there are other
tabs that I also use they are just constantly pinned: whatsapp, facebook chat,
discord and sometimes gitter. So this provided a new challenge: can I find an
app to unite them all? Yes I can.&lt;/p&gt;
&lt;p&gt;Again didn&amp;rsquo;t wanted to use something that is just another browser, so went with
an old-old friend Pidgin. All the listed chat platforms have a plugin for it,
open source with a clean code base (didn&amp;rsquo;t review all of the code, but all the
files I visited was clean and relatively easy to understand), so very much
tempting to contribute. Best of all: Pidgin will only eat up ~70 Mb of memory -
opposed to gigabytes - and won&amp;rsquo;t send statistics about me to the facebook and
other data hoarder and dealers.&lt;/p&gt;
&lt;h2 id=&#34;mobile-front&#34;&gt;Mobile front&lt;/h2&gt;
&lt;p&gt;All this has triggered the privacy demon in me so started to look for
alternatives as well on mobile. First big hoarder to tackle: Google. The app
that is actual for me to look at is Google Photos. I loved this app as made
it very easy for me to share pictures with my wife or with anyone. Also could
access all the photos on my computer quickly and all is backed up and safe.&lt;/p&gt;
&lt;p&gt;All good things must come to an end at some point for me with Google Photos the
end meant that - understandably - they don&amp;rsquo;t provide free storage anymore. In
the past if you accepted that they re-compress the images with their algorithms,
then they wouldn&amp;rsquo;t count towards used data - so free and unlimited storage.&lt;/p&gt;
&lt;p&gt;Photos are actually a long story for me, tried a lot of different solutions when
dealing with photos from my camera. Nothing work truly easily. A new motivation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apart of google - was that my wife started to make photos and videos with&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;the family DSLR. My wife isn&amp;rsquo;t tech savvy, so whatever solution I try next it
has to be seamless to her, other way she won&amp;rsquo;t use it.&lt;/p&gt;
&lt;p&gt;Now to the solution: TrueNAS. Yes, decided to run my own storage at home. As you
may already guess I didn&amp;rsquo;t go with the most straightforward solution&amp;hellip; nah life
would be boring if we wouldn&amp;rsquo;t make is pointlessly over complicated!&lt;/p&gt;
&lt;p&gt;So for NAS my criteria was that I want to be able to extend it later when and if
I need more storage. For this you need more than just a two bay NAS, but rather
a 4 or 5 bay NAS. Now those bigger NAS setups a for me just ridiculously
expensive. Instead of spending big, decided to reuse my desktop PC from 2008 to
build a NAS using TrueNAS system. It is really an awesome setup for me, but
think I&amp;rsquo;ll write about that in a dedicated post.&lt;/p&gt;
&lt;p&gt;On this TrueNAS setup I also installed Nextcloud, this is able to replace both
Google Photos and Dropbox for me. Got a mobile app for it, easy enough to use
and there is also a Gnome integration for it. Apart of images and files it can
also serve as a calendar and contacts server (another stab at Google).&lt;/p&gt;
&lt;p&gt;For larger files also configured NFS endpoints so that we can handle images from
the DSLR. NFS works surprisingly well with Darktable, it is able to read the
files quickly enough. If I would deal with images as a profession would probably
invest into a better network setup, but it works well enough via WiFi already.
Only secret is to keep Darktable&amp;rsquo;s SQLight database files on the local system,
having that over NFS renders the app uselessly slow.&lt;/p&gt;
&lt;p&gt;Having the above setup working reliable and well, I&amp;rsquo;m really considering going
back to a privacy oriented Android setup on my phone as well, without all the
bloatware and mandatory google applications installed.&lt;/p&gt;
&lt;h2 id=&#34;news-sources&#34;&gt;News sources&lt;/h2&gt;
&lt;p&gt;RSS is still out there and still lives, I was surprised to find that most news
sites will have RSS feeds as well. With RSS again one can use a simple
application, even Evolution has RSS reader plugin and have all the news tracking
free.&lt;/p&gt;
&lt;h2 id=&#34;outro&#34;&gt;Outro&lt;/h2&gt;
&lt;p&gt;The journey with all those apps and different setups made me realize again that
we do share a lot of information about ourselves on the internet. In the
background we have no idea how they use all that data. The collected data
shouldn&amp;rsquo;t be connectable the person behind it, but in truth it can be. If you
don&amp;rsquo;t read all the three articles linked in the beginning, just read &lt;a href=&#34;https://nrkbeta.no/2020/12/03/my-phone-was-spying-on-me-so-i-tracked-down-the-surveillants/&#34;&gt;Martin
Gundersen&lt;/a&gt;&amp;rsquo;s one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What gets measured gets managed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Through the data that we submit knowingly or not, voluntarily or not, will
enable companies to manage our actions. So now I&amp;rsquo;m back in 2010, running my own
server and using native application instead of browser based solutions.&lt;/p&gt;
</description>
		</item>
		<item>
			<title>MongoDB deprecating &#34;count&#34;</title>
			<link>https://szab.it/posts/mongodb-deprecating-count/</link>
			<pubDate>Sun, 01 Mar 2020 09:22:00 +0100</pubDate>
			<guid isPermaLink="true">https://szab.it/posts/mongodb-deprecating-count/</guid>
			<description>&lt;p&gt;Prior warning: this post may turn into a rant.&lt;/p&gt;
&lt;h2 id=&#34;prologue&#34;&gt;Prologue&lt;/h2&gt;
&lt;p&gt;In the second half of 2019 at my company we have got an expected notice from our
MongoDB provider, Atlas.&lt;/p&gt;
&lt;p&gt;The notice was about the usual pain that they do every now and then: force
upgrade for old versions. At that time we were running MongoDB v3.4 and so now
we got the notice to ensure that we have a driver that supports v3.6 as all the
clusters will be upgraded on the end of January 2020.&lt;/p&gt;
&lt;p&gt;All is well we look at these upgrades as a necessary evil, that causes pain in
short therm, but will bring benefits in the long run. The benefits with newer
MongoDB versions was the performance. We have tested some of our heavier
queries - with which we already have had issues in production - and behold they
become 10 times faster. (We were comparing MongoDB v3.4 with v4.2 at that time)&lt;/p&gt;
&lt;p&gt;We thought cool 10x the power! Lets do this!&lt;/p&gt;
&lt;p&gt;So we have started our long journey of upgrades, tests, fixes and further
upgrades and tests, tears and cries, laughter and anger.&lt;/p&gt;
&lt;p&gt;Once we were satisfied with the upgrade we have deployed our first services,
that was already in need of that performance boost. Cool we thought, surely we
gonna have some co-workers coming to us saying: Boys don&amp;rsquo;t know what has
happened, but the service is blazing fast!&lt;/p&gt;
&lt;p&gt;Man, we were wrong! Surely the queries looked fast, but there was a tiny bit of
issue: some of our calls to the database started to timeout. Worst of it those
calls were actually fast previously. As an icing on the cake this didn&amp;rsquo;t come to
our attention straightaway, but only a week later, when another new service
wanted to sync data.&lt;/p&gt;
&lt;p&gt;Once noted, we jumped into debugging. Looking at the database&amp;rsquo;s real time
operations (&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.currentOp/&#34;&gt;&lt;code&gt;db.currentOp()&lt;/code&gt;&lt;/a&gt;) we were seeing &lt;code&gt;aggregation&lt;/code&gt; calls on the biggest
collection being called. As we didn&amp;rsquo;t recall to have used such heavy
aggregations on that collection, we searched through our code base to find what
could issue this command.&lt;/p&gt;
&lt;p&gt;We have managed to find a couple of places where we have used aggregation, but
none of them fitted the match that we seen in the operations list.&lt;/p&gt;
&lt;p&gt;Eventually one team member suggested that that aggregation is the way MongoDB
does the count. I couldn&amp;rsquo;t believe it at first, but then we have read a bit more
about the new &lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.countDocuments/&#34;&gt;&lt;code&gt;countDocuments&lt;/code&gt;&lt;/a&gt; method that was &lt;!-- raw HTML omitted --&gt;suggested method by the
documentation&lt;!-- raw HTML omitted --&gt; to use instead of the &lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.countDocuments/&#34;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; and turned out that it is indeed
slower as it is more accurate.&lt;/p&gt;
&lt;p&gt;From MongoDB&amp;rsquo;s JIRA ticket &lt;a href=&#34;https://jira.mongodb.org/browse/NODE-1638&#34;&gt;NODE-1638&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;count has been deprecated for a number of reasons. First, and foremost, the
existing count command could not be run within transactions, so an alternative
approach needed to be taken. Secondarily, the count command in most cases was
not accurate. We have replaced count with countDocuments and
estimatedDocumentCount. Please use estimatedDocumentCount for the performance
you are looking for, and parity with the original count.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the reasons against &lt;code&gt;count&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;not giving accurate results and&lt;/li&gt;
&lt;li&gt;not transaction friendly&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From my point of view those two are not really reasons to deprecate a core
command, which think is quite needed.&lt;/p&gt;
&lt;h2 id=&#34;count-is-not-accurate&#34;&gt;&lt;code&gt;count&lt;/code&gt; is not accurate&lt;/h2&gt;
&lt;p&gt;Okay it isn&amp;rsquo;t, but honestly what was accurate in MongoDB before? Like with
iterating a &lt;code&gt;cursor&lt;/code&gt; (with mongoose &lt;code&gt;stream&lt;/code&gt;), you could easily miss documents or
see others twice in the process. Unless you set read preference to snapshot, but
even then if the process is long running and you have inserts in the mean time,
then you won&amp;rsquo;t see the new documents, so it is still a &lt;em&gt;meh&lt;/em&gt; solution.&lt;/p&gt;
&lt;p&gt;For processing all the data in the database, even the ones that didn&amp;rsquo;t exist
when we started the process, we were using a practice where we sorted the &lt;code&gt;_id&lt;/code&gt; in
ascending order, retrieving data in batches and using the last _id in the list
with a greater than filter: &lt;code&gt;{ _id: { $gt: lastId } }&lt;/code&gt;. Like this we could
processes all the documents without duplicates and if there were new documents
created while the process run, no problem, still got them.&lt;/p&gt;
&lt;p&gt;Now in case of the count, so far I haven&amp;rsquo;t seen a case where would have needed
pinpoint accuracy. I can imagine that there are case where one needs it, but
then just like with the streaming above there is a solution for it. The solution
in this case comes in aggregation and I&amp;rsquo;m sure that before the &lt;code&gt;countDocuments&lt;/code&gt;
command developers were using it to get the accurate count that they have
needed.&lt;/p&gt;
&lt;p&gt;It is nice that now there is a method in mongo, that can give you the accurate
count, without fiddling around with aggregation. It is convenient for those who
need it. Still in my point it is not a reason to deprecate &lt;code&gt;count&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;not-transaction-safe&#34;&gt;Not transaction safe&lt;/h2&gt;
&lt;p&gt;Well okay. It isn&amp;rsquo;t. Don&amp;rsquo;t know, never tried it. As I tend to work with
microservices, I never missed or wanted to use transactions. It is hard to
implement across services. My preference for data consistency is to make
operations idempotent and so it is safe to put them into job queues, that
guarantee to run it at least once.&lt;/p&gt;
&lt;p&gt;Just to emphasize it: I do respect that in some cases transactions could be the
best or only solutions and it is nice that &lt;code&gt;countDocuments&lt;/code&gt; is transaction safe.
Just still not a reason to deprecate &lt;code&gt;count&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;So &lt;code&gt;count&lt;/code&gt; has been marked as deprecated in MongoDB v4.0, it is still well and
alive in v4.2. Since the two replacement suggested to be used instead:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;countDocuments&lt;/code&gt; - way too slow for us&lt;/li&gt;
&lt;li&gt;&lt;code&gt;estimatedDocumentCount&lt;/code&gt; - cannot provide a query&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;are both unsuitable for us, we have reverted all our calls to use the poor old
&lt;code&gt;count&lt;/code&gt; method and we have accepted that our terminal will be showing the
deprecation warnings for a while.&lt;/p&gt;
&lt;p&gt;For now we hope that they won&amp;rsquo;t remove it or they will improve the performance
of the new &lt;code&gt;countDocuments&lt;/code&gt; method to be on pair with it.&lt;/p&gt;
&lt;h2 id=&#34;finale&#34;&gt;Finale&lt;/h2&gt;
&lt;p&gt;Okay, this has indeed become a rant, but you have been warned. :D Sorry.&lt;/p&gt;
</description>
		</item>
		<item>
			<title>Bad dependencies and bad interface changes</title>
			<link>https://szab.it/posts/bad-dependencies-and-bad-interface-changes/</link>
			<pubDate>Sat, 25 Jan 2020 12:35:00 +0100</pubDate>
			<guid isPermaLink="true">https://szab.it/posts/bad-dependencies-and-bad-interface-changes/</guid>
			<description>&lt;p&gt;Recently one of my colleagues has shared his pain about a nodeJS package that we
use to zip files.&lt;/p&gt;
&lt;p&gt;His issue was that the library stopped generating the zip files and just hangs.
Eventually found, that in the project the package in question has been upgraded,
but with a small issue. The newer version has changed the interface and the same
method instead of returning the instance it returns a Promise.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Archiver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aborted&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Error(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;finalize: archive was aborted&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Error(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;finalize: archive already finalizing&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pending&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_queue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_statQueue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;()) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_finalize&lt;/span&gt;();
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;source:&lt;!-- raw HTML omitted --&gt; &lt;a href=&#34;https://github.com/archiverjs/node-archiver/blob/0.15.1/lib/core.js#L489-L507&#34;&gt;https://github.com/archiverjs/node-archiver/blob/0.15.1/lib/core.js#L489-L507&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Archiver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aborted&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArchiverError&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ABORTED&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArchiverError&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FINALIZING&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pending&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_queue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_statQueue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;()) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_finalize&lt;/span&gt;();
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Promise(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt;;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;();
      }
    })

    &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;);
    })
  })
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;source:&lt;!-- raw HTML omitted --&gt; &lt;a href=&#34;https://github.com/archiverjs/node-archiver/blob/dd7f10d/lib/core.js#L759-L792&#34;&gt;https://github.com/archiverjs/node-archiver/blob/dd7f10d/lib/core.js#L759-L792&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;bad-interface-changes&#34;&gt;Bad interface changes&lt;/h2&gt;
&lt;p&gt;The painful thing about the new code isn&amp;rsquo;t the fact that it has the same name
and returns something new, since the upgrade was not minor but &lt;em&gt;major&lt;/em&gt; upgrade.&lt;/p&gt;
&lt;p&gt;The thing that actually bad in my point of view, that it can return two
completely different things. Till there is an &lt;code&gt;if&lt;/code&gt; that is being triggered it
returns the instance of the class, &lt;strong&gt;but&lt;/strong&gt; once those are exhausted it returns a
&lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Icing on the cake that in this case the instance that it returns is a stream,
that we were just piping, but now at some point it will turn in to a &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Generally it is a good rule of thumb that a method should always return with the
same type, no matter on the logic inside. (Unless your method is a type selector
or something like that :D )&lt;/p&gt;
&lt;p&gt;For the above code I could imagine that the original &lt;code&gt;finalize&lt;/code&gt; could have
remained the same, always returning a stream. There could have been a new method
created that would give back a promise and also retaining backward
compatibility. E.g.: introducing an &lt;code&gt;asPromised&lt;/code&gt; method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Archiver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aborted&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArchiverError&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ABORTED&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArchiverError&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FINALIZING&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;finalize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_pending&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_queue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_statQueue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;idle&lt;/span&gt;()) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_finalize&lt;/span&gt;();
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;Archiver&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;prototype&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;asPromised&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Promise(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt;;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;();
      }
    });

    &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;errored&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;);
    });
  });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;bad-dependencies&#34;&gt;Bad dependencies&lt;/h2&gt;
&lt;p&gt;Now over for the necessity of this npm package.&lt;/p&gt;
&lt;p&gt;This package is used in NodeJS, so we don&amp;rsquo;t send it to do magic on the
front-end, but we use it in a controlled environment: a NodeJS app running in a
Docker container wrapped in a Kubernetes pod.&lt;/p&gt;
&lt;p&gt;For the docker container we use GNU/Linux, so we can have other programs in
there as well, that can be found for Linux.&lt;/p&gt;
&lt;p&gt;The files that we zip are on an NFS drive, so we don&amp;rsquo;t need to stream it, we
know the location of the file as well.&lt;/p&gt;
&lt;p&gt;Here comes the idea:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we have linux &lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;li&gt;we have the files/folders accessible &lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;li&gt;we could have the &lt;code&gt;zip&lt;/code&gt; program on the system &lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So in effect we could axe a third party npm package and use &lt;a href=&#34;https://nodejs.org/api/child%5Fprocess.html#child%5Fprocess%5Fchild%5Fprocess%5Fexec%5Fcommand%5Foptions%5Fcallback&#34;&gt;child_process.exec&lt;/a&gt;
or &lt;a href=&#34;https://nodejs.org/api/child%5Fprocess.html#child%5Fprocess%5Fchild%5Fprocess%5Fspawn%5Fcommand%5Fargs%5Foptions&#34;&gt;child_process.spawn&lt;/a&gt; method&amp;rsquo;s from NodeJS itself. The extra 3rd party in this
case would be the &lt;code&gt;zip&lt;/code&gt; program, but think it is safe to say that command is a
battle tested, fire hardened program. Which is not likely to cause issues or
change interface. For me an extra benefit of this approach, that we can offload
processing from the main app to a separate CPU thread &lt;em&gt;aaaand&lt;/em&gt; we can also use
&lt;a href=&#34;https://www.gnu.org/software/coreutils/manual/html%5Fnode/nice-invocation.html&#34;&gt;GNU&amp;rsquo;s nice utility&lt;/a&gt; to set the importance of the task. Like this we can also
ensure that the main app will always have enough CPU time to respond and the zip
command won&amp;rsquo;t eat it up from the app as well.&lt;/p&gt;
&lt;p&gt;Gains with this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zip&lt;/code&gt; is a reliable program that has and is being tested by millions&lt;/li&gt;
&lt;li&gt;offload processing from the main app, so it can still serve other requests
without an issue&lt;/li&gt;
&lt;li&gt;use built-in NodeJS module that is not likely to change interface and also
tested by more than a lonely lib from npmjs.org&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It is good to think through as what is the goal and not just pick an npm package
off the shelf. The issue you&amp;rsquo;re facing has most likely already been solved.&lt;/p&gt;
</description>
		</item>
		<item>
			<title>Custom keyboard layout in GNU/Linux</title>
			<link>https://szab.it/posts/custom-keyboard-layout-in-gnu_linux/</link>
			<pubDate>Sun, 19 Jan 2020 16:19:00 +0100</pubDate>
			<guid isPermaLink="true">https://szab.it/posts/custom-keyboard-layout-in-gnu_linux/</guid>
			<description>&lt;p&gt;I generally like to use english keyboard layout for programming, makes it easier
to get to the special characters. However, since I&amp;rsquo;m a hungarian, from
time-to-time would like to use accented characters as well. E.g. &lt;code&gt;á&lt;/code&gt;, &lt;code&gt;é&lt;/code&gt;, &lt;code&gt;ű&lt;/code&gt;, &lt;code&gt;ú&lt;/code&gt;,
&lt;code&gt;ő&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;In GNU/Linux to change keyboard layout isn&amp;rsquo;t the easiest to do. As far as I
remember (from about 10 years ago) in Windows there is a graphical app that
helps you with this. In GNU/Linux this is all via text files.&lt;/p&gt;
&lt;p&gt;Here are the steps I&amp;rsquo;ve done:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;add a new section in the &lt;code&gt;us&lt;/code&gt; symbol file - &lt;code&gt;/usr/share/X11/xkb/symbols/us&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;      partial alphanumeric_keys
      xkb_symbols &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;euro-hu&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

          include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us(basic)&amp;#34;&lt;/span&gt;
          name&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Group1&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;English (US, with Hun)&amp;#34;&lt;/span&gt;;

          include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eurosign(5)&amp;#34;&lt;/span&gt;

          include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;level3(ralt_switch)&amp;#34;&lt;/span&gt;

          key &amp;lt;AD07&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            u,            U,        uacute,           Uacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AD03&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            e,            E,        eacute,           Eacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AD08&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            i,            I,        iacute,           Iacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AD09&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            o,            O,        oacute,           Oacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AD10&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            p,            P,    odiaeresis,       Odiaeresis &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AC01&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            a,            A,        aacute,           Aacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
          key &amp;lt;AE10&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;            0,   parenright,    odiaeresis,       Odiaeresis &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ö Ö
          key &amp;lt;AE11&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;        minus,   underscore,    udiaeresis,       Udiaeresis &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // - _ ü Ü
          key &amp;lt;AE12&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;        equal,         plus,        oacute,           Oacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; + ó Ó
          key &amp;lt;AD11&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;  bracketleft,    braceleft,  odoubleacute,     Odoubleacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; ő Ő
          key &amp;lt;AD12&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; bracketright,   braceright,        uacute,           Uacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; ú Ú
          key &amp;lt;AC10&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;    semicolon,        colon,        eacute,           Eacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // ; : é É
          key &amp;lt;AC11&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;   apostrophe,     quotedbl,        aacute,           Aacute &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; // &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; á Á
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          key &amp;lt;BKSL&amp;gt; { [    backslash,          bar,  udoubleacute,     Udoubleacute ] }; // \ | ű Ű
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          key &amp;lt;LSGT&amp;gt; { [    backslash,          bar,  udoubleacute,     Udoubleacute ] }; // \ | í Í
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      };
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the new keyboard variant should also be noted in the following four files as
well:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/usr/share/X11/xkb/rules/base.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;variant&amp;gt;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configItem&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;euro&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;English (US, euro on 5)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configItem&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/variant&amp;gt;&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;variant&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configItem&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;euro-hu&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;English (US, with Hun)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configItem&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/variant&amp;gt;&lt;/span&gt;
&lt;/span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;variant&amp;gt;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configItem&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;intl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;English (US, intl., with dead keys)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configItem&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/variant&amp;gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/usr/share/X11/xkb/rules/base.lst&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;                    euro            us: English &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;US, euro on 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    euro-hu         us: English &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;US, with Hun&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;                    intl            us: English &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;US, intl., with dead keys&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/usr/share/X11/xkb/rules/evdev.xml&lt;/code&gt; - same way as &lt;code&gt;base.xml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/usr/share/X11/xkb/rules/evdev.lst&lt;/code&gt; - same as &lt;code&gt;base.lst&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart the system and the new keyboard layout should be available - for
gnome - in the &lt;em&gt;Regional &amp;amp; Language&lt;/em&gt; setting&amp;rsquo;s &lt;em&gt;Input Sources&lt;/em&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you wish to dig deeper in the topic there is a deeper documentatnion about
this over on a polish programmer&amp;rsquo;s site &lt;a href=&#34;https://michal.kosmulski.org/computing/articles/custom-keyboard-layouts-xkb.html&#34;&gt;Michał Kosmulski&amp;rsquo;s &amp;ldquo;Creating custom
keyboard layouts for X11 using XKB&amp;rdquo;&lt;/a&gt; article.&lt;/p&gt;
&lt;p&gt;There is also an option to make keyboard layout modifications with Xmodmap, but
I&amp;rsquo;ve had some bad experiences with it. Namely it was slow to load the config, so
rather do it via XKB. Possible that I was doing something bad with Xmodmap&amp;hellip;
but we will never no that now. :D&lt;/p&gt;
</description>
		</item>
		<item>
			<title>Git global ignore file</title>
			<link>https://szab.it/posts/git-global-ignore-file/</link>
			<pubDate>Sat, 11 Feb 2017 11:08:00 +0100</pubDate>
			<guid isPermaLink="true">https://szab.it/posts/git-global-ignore-file/</guid>
			<description>&lt;p&gt;the repo and you don&amp;rsquo;t even want it to be listed in the &lt;code&gt;.gitignore&lt;/code&gt; file of the
repository.&lt;/p&gt;
&lt;p&gt;If you have multiple repositories, then there is a nice way to do it per user,
using the core.excludesFile config property of git.&lt;/p&gt;
&lt;p&gt;This might be set in your git install already (it wasn&amp;rsquo;t the case for me, but
still worth to check it):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git config --global --get core.excludesFile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If it returns path to a file, then just simply add your ignore pattern to that
file (just a todo.md line will do the trick, no need for absolute paths).&lt;/p&gt;
&lt;p&gt;Other way if the property isn&amp;rsquo;t set, you can set it to any file you would like
it to be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git config --global --add core.excludesFile ~/.myGitHideout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source for the solution: &lt;a href=&#34;https://git-scm.com/docs/gitignore&#34;&gt;https://git-scm.com/docs/gitignore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Originally I&amp;rsquo;ve posted this on medium as an answer to &lt;a href=&#34;https://medium.com/@dave%5Flunny/exclude-files-from-git-without-committing-changes-to-gitignore-986fa712e78d&#34;&gt;Dave Lunny&amp;rsquo;s post&lt;/a&gt; in
2017/02/11.&lt;/p&gt;
</description>
		</item>
	</channel>
</rss>
